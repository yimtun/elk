URI Search

通过url query  参数实现搜索，常用参数如下：

-q 指定查询的语句 语法为 Query String Syntax
-df 如果在q 的参数中不指定字段时默认查询的字段如果不指定es会查询所有字段
-sort 排序
-timeout 指定超时时间 默认不超时
-from,size 用于分页



示例
GET /my_index/_search?q=alfred&df=user&sort=age:asc&from=48&size=10&timeout=1s

查询user字段包含alfred的文档，结果按照age升序排列，返回弟5~14个文档，如果超过1s
没有结束，则以超时结束

q 没有指定字段
df 指定user字段

user字段中包含alfred 的文档

sort=age 按age字段排序
asc  升序

from 4  获取第5 到
size 10   第 4+10=14 

timeout 1s



URI Search  -  Query String Syntax


term 与 phrase

-term 就是一个个的单词      alfred way 等效于 alfred OR way  是两个term  只要包含某一个就符合查询需求
-phrase 就是词语 要求有先后顺序 "alfred way"  是一个词语 对立面的term 是有顺序要求的

泛查询
-alfred 等效于在所有字段去匹配term  匹配类型  前提是没有指定 df 参数

指定字段查询
-name:alfree


Group 分组设定 使用括号指定匹配的规则

-(quick OR brown) AND fox
-status:(active OR pending)title:(full text search)

PUT test_search_index
{
  "settings": {
    "index": {
      "number_of_shards": "1"
    }
  }
}


bulk api对json 的语法有严格的要求，每个json串不能换行，同时一个json串和一个json串之间，必须有一个换行


DELETE test_search_index

PUT test_search_index
{
  "settings": {
    "index": {
      "number_of_shards": "1"
    }
  }
}

POST test_search_index/doc/_bulk
{"index":{"_id":"1"}}
{"username":"alfred way","job":"java engineer","age":18,"brith":"1990-01-02","isMarried":false}
{"index":{"_id":"2"}}
{"username":"alfred","job":"java senior engineer and java specialist","age":28,"birth":"1980-05-07","isMarried":true}
{"index":{"_id":"3"}}
{"username":"lee","job":"java and ruby engineer","age":22,"birth":"1985-08-07","isMarried":false}
{"index":{"_id":"4"}}
{"username":"alfred junior way","job":"ruby engineer","age":23,"birth":"1989-05-07","isMarried":false}






范查询








