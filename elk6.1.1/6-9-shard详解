倒排索引不可变更

倒排索引一旦生成 不能更改
不用考虑并发写文件的问题 杜绝了锁机制带来的性能问题

由于文件不再更改，可以充分利用文件系统缓存 只需载入一次 只要内存足够，
对该文件的读取都会从内存读取 性能高
利于生成缓存数据

利于对文件进行压缩存储 节省磁盘空间和内存

缺点：
需要写入新文档时 必须重新构建倒排索引文件 然后替换老文件后 新文件才能被检索 导致文档实时性差


解决方案：
新文档直接生成新的倒排索引文件 查询的时候同时查询所有的倒排文件
然后做结果的汇总计算即可


Lucene 采用的就是这种方案 它构建的单个倒排索引称为segment 合在一起称为index
与ES 中的 Index 概念不同 ES中的一个shard 对应一个Lucene Index 

Lucene 会有一个专门的文件来记录所有的segment信息称为 commit point




文档搜索实时性 refresh
segment写入磁盘的过程已然很耗时，可以借助文件系统缓存的特性，先将segment在缓存中创建并开放查询来
进一步提升实时性 该过程在es中被称为refresh

在refresh之前 文档会先存储在一个buffer中 ，refresh 时将buffer中的所有文档清空并生成segment


es默认每一秒执行一次refresh 因此文档的实时性被提高到1秒 这也是es被称为 近实时
Near Real Time 的原因



文档搜索实时性 translog

es引入translog 机制 写入文档到 index  buffer 时
同时将该操作写入translog 




文档搜索实时性 flush




文件搜索实时性 refresh

force_merge api





